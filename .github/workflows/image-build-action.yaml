---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Image Build

on:
  workflow_call:
    inputs:
      app:
        type: string
        description: Application Name
        required: true
      version:
        type: string
        description: Version
        required: true
      release:
        type: boolean
        description: Release
        required: true
      test:
        type: boolean
        description: Test
        required: true

jobs:
  build:
    name: Build ${{ inputs.app }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    strategy:
      matrix:
        platform: ["amd64", "arm64"]
      fail-fast: false
    outputs:
      amd64: ${{ steps.digest.outputs.amd64 }}
      arm64: ${{ steps.digest.outputs.arm64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set Lowercase Owner
        id: owner
        run: echo "owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build Image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        id: build
        with:
          build-args: |
            VENDOR=${{ github.repository_owner }}
            VERSION=${{ inputs.version }}
            REVISION=${{ github.sha }}
          cache-from: |
            ${{ format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2},mode=max', steps.owner.outputs.owner, inputs.app, matrix.platform) }}
          cache-to: |
            ${{ inputs.release && format('type=registry,ref=ghcr.io/{0}/build_cache:{1}-{2}', steps.owner.outputs.owner, inputs.app, matrix.platform) || '' }}
          labels: |
            org.opencontainers.image.title=${{ inputs.app }}
            org.opencontainers.image.url=https://ghcr.io/${{ steps.owner.outputs.owner }}/${{ inputs.app }}
            org.opencontainers.image.version=${{ inputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          outputs: |
            type=docker
            ${{ inputs.release && format('type=image,name=ghcr.io/{0}/{1},push-by-digest=true,name-canonical=true,push=true', steps.owner.outputs.owner, inputs.app) || '' }}
          context: ./apps/${{ inputs.app }}
          platforms: linux/${{ matrix.platform }}
          provenance: false

      - if: ${{ inputs.test }}
        name: Setup Testing Tools
        id: test
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          if yq --exit-status '.schemaVersion' ./apps/${{ inputs.app }}/tests.yaml &>/dev/null; then
              echo "tool=container-structure-test" >> $GITHUB_OUTPUT
              gh release download --repo GoogleContainerTools/container-structure-test --pattern '*-linux-${{ matrix.platform }}' --output container-structure-test
              mv container-structure-test /usr/local/bin/container-structure-test && chmod +rx /usr/local/bin/container-structure-test
          else
              echo "tool=goss" >> $GITHUB_OUTPUT
              gh release download --repo goss-org/goss --pattern '*-linux-${{ matrix.platform }}' --output goss
              mv goss /usr/local/bin/goss && chmod +rx /usr/local/bin/goss
              gh release download --repo goss-org/goss --pattern 'dgoss' --output dgoss
              mv dgoss /usr/local/bin/dgoss && chmod +rx /usr/local/bin/dgoss
          fi

      - if: ${{ inputs.test && steps.test.outputs.tool == 'container-structure-test' }}
        name: Run Tests (container-structure-test)
        run: container-structure-test test --image ${{ steps.build.outputs.imageid }} --config ./apps/${{ inputs.app }}/tests.yaml

      - if: ${{ inputs.test && steps.test.outputs.tool == 'goss' }}
        name: Run Tests (Goss)
        env:
          GOSS_FILE: ./apps/${{ inputs.app }}/tests.yaml
          GOSS_OPTS: --retry-timeout 60s --sleep 1s
        run: dgoss run ${{ steps.build.outputs.imageid }}

      - if: ${{ inputs.release }}
        name: Export Digest
        id: digest
        run: |
          echo "${{ matrix.platform }}=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

  release:
    if: ${{ inputs.release }}
    needs: build
    name: Release ${{ inputs.app }}
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    steps:
      - name: Set Lowercase Owner
        id: owner
        run: echo "owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Setup Node
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 22.x

      - name: Install Semver
        run: npm install semver

      - name: Determine Definitive Version
        uses: actions/github-script@60a0d83039c74a4aee543508d2
